{"version":3,"sources":["pages/contact/ContactForm.tsx","pages/contact/Contact.tsx"],"names":["ContactForm","useState","animateVariant","setAnimateVariant","useEffect","validationSchema","yup","email","required","subject","min","max","message","handleSubmit","resetForm","a","axios","post","setTimeout","console","log","validateOnChange","initialValues","onSubmit","setSubmitting","values","errors","touched","handleChange","handleBlur","isSubmitting","isValid","className","input","style","border","type","name","onChange","onBlur","value","placeholder","initial","animate","variants","visible","x","opacity","transition","delay","duration","hidden","textarea","button","backgroundColor","disabled","Contact","h2","y","p","text","href"],"mappings":"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","file":"static/js/5.41803571.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport './ContactForm.scss';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\n\nexport interface ContactFormProps {}\n\nconst ContactForm: React.SFC<ContactFormProps> = () => {\n  const [animateVariant, setAnimateVariant] = useState('hidden');\n  useEffect(() => {\n    setAnimateVariant('visible');\n  }, []);\n\n  const validationSchema = yup.object({\n    email: yup.string().email('Invalid email').required('Required'),\n    subject: yup.string().required('Required').min(6, 'Too Short!').max(50, 'Too Long!'),\n    message: yup.string().required('Required').min(6, 'Too Short!').max(500, 'Too Long!'),\n  });\n\n  const handleSubmit = async (\n    email: string,\n    subject: string,\n    message: string,\n    resetForm: () => void,\n  ) => {\n    try {\n      await axios.post('https://portfolio321123.herokuapp.com/email', { email, subject, message });\n\n      await setAnimateVariant('hidden');\n      await resetForm();\n      await setTimeout(() => {\n        setAnimateVariant('visible');\n      }, 1400);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Formik\n      validateOnChange\n      validationSchema={validationSchema}\n      initialValues={{\n        email: '',\n        subject: '',\n        message: '',\n      }}\n      onSubmit={async ({ email, subject, message }, { setSubmitting, resetForm }) => {\n        await setSubmitting(true);\n        await handleSubmit(email, subject, message, resetForm);\n        await setSubmitting(false);\n      }}\n    >\n      {({ values, errors, touched, handleChange, handleBlur, isSubmitting, isValid }) => (\n        <Form className=\"Form\">\n          {errors.email && touched.email && <div className=\"Form__validation\">{errors.email}</div>}\n          <motion.input\n            style={errors.email && touched.email ? { border: '1px solid #e74c3c' } : {}}\n            className=\"Form__input\"\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n            placeholder=\"Email\"\n            // animate={{ x: [100, 0], opacity: [0, 1] }}\n            initial=\"hidden\"\n            animate={animateVariant}\n            variants={{\n              visible: { x: 0, opacity: 1, transition: { delay: 0.6, duration: 0.8 } },\n              hidden: { x: 100, opacity: 0, transition: { delay: 0.6, duration: 0.8 } },\n            }}\n          />\n\n          {errors.subject && touched.subject && (\n            <div className=\"Form__validation\">{errors.subject}</div>\n          )}\n          <motion.input\n            style={errors.subject && touched.subject ? { border: '1px solid #e74c3c' } : {}}\n            className=\"Form__input\"\n            type=\"subject\"\n            name=\"subject\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.subject}\n            placeholder=\"Temat\"\n            // animate={{ x: [100, 0], opacity: [0, 1] }}\n            // transition={{ delay: 0.4 }}\n            initial=\"hidden\"\n            animate={animateVariant}\n            variants={{\n              visible: { x: 0, opacity: 1, transition: { delay: 0.4, duration: 0.8 } },\n              hidden: { x: 100, opacity: 0, transition: { delay: 0.4, duration: 0.8 } },\n            }}\n          />\n          {errors.message && touched.message && (\n            <div className=\"Form__validation\">{errors.message}</div>\n          )}\n          <motion.textarea\n            style={errors.message && touched.message ? { border: '1px solid #e74c3c' } : {}}\n            className=\"Form__input Form__textarea\"\n            name=\"message\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.message}\n            placeholder=\"Wiadomość\"\n            // animate={{ x: [100, 0], opacity: [0, 1] }}\n            // transition={{ delay: 0.2 }}\n            initial=\"hidden\"\n            animate={animateVariant}\n            variants={{\n              visible: { x: 0, opacity: 1, transition: { delay: 0.2, duration: 0.8 } },\n              hidden: { x: 100, opacity: 0, transition: { delay: 0.2, duration: 0.8 } },\n            }}\n          />\n          <motion.button\n            style={\n              isValid && values.email && values.subject && values.message\n                ? {\n                    border: '1px solid #2ecc71',\n                    backgroundColor: isSubmitting ? '#2ecc71' : 'transparent',\n                  }\n                : {}\n            }\n            disabled={isValid && isSubmitting}\n            type=\"submit\"\n            className=\"Form__btn\"\n            // animate={{ x: [100, 0], opacity: [0, 1] }}\n            // transition={{ delay: 0 }}\n            initial=\"hidden\"\n            animate={animateVariant}\n            variants={{\n              visible: { x: 0, opacity: 1, transition: { delay: 0, duration: 0.8 } },\n              hidden: { x: 100, opacity: 0, transition: { delay: 0, duration: 0.8 } },\n            }}\n          >\n            Wyślij\n          </motion.button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\r\nimport './Contact.scss';\r\n// import { MdPhone, MdEmail } from 'react-icons/md';\r\nimport { FaCopy } from 'react-icons/fa';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport { motion } from 'framer-motion';\r\nimport Form from './ContactForm';\r\n\r\nexport interface ContactProps {}\r\n\r\nconst Contact: React.SFC<ContactProps> = () => (\r\n  <main className=\"Contact\">\r\n    <section className=\"Contact__info\">\r\n      <motion.h2 className=\"Contact__header\" animate={{ y: [-100, 0], opacity: [0, 1] }} transition={{ delay: 0.6 }}>\r\n        Skontaktuj się\r\n      </motion.h2>\r\n      <motion.p className=\"Contact__paragraph\" animate={{ y: [-100, 0], opacity: [0, 1] }} transition={{ delay: 0.4 }}>\r\n        Paweł Pyc\r\n      </motion.p>\r\n      <motion.p className=\"Contact__paragraph\" animate={{ y: [-100, 0], opacity: [0, 1] }} transition={{ delay: 0.2 }}>\r\n        {/* <MdPhone className=\"Contact__icon\" /> */}\r\n        691 115 437\r\n        <CopyToClipboard text=\"691115437\">\r\n          <FaCopy className=\"Contact__icon Contact__icon--copy\" />\r\n        </CopyToClipboard>\r\n      </motion.p>\r\n      <motion.p className=\"Contact__paragraph\" animate={{ y: [-100, 0], opacity: [0, 1] }} transition={{ delay: 0 }}>\r\n        <a className=\"Contact__link\" href=\"mailto: pawelpyc154@gmail.com?subject=your title&body=TThe message\">\r\n          pawelpyc154@gmail.com\r\n        </a>\r\n        <CopyToClipboard text=\"pawelpyc154@gmail.com\">\r\n          <FaCopy className=\"Contact__icon Contact__icon--copy\" />\r\n        </CopyToClipboard>\r\n      </motion.p>\r\n    </section>\r\n    <section className=\"Contact__formContainer\">\r\n      <Form />\r\n    </section>\r\n  </main>\r\n);\r\n\r\nexport default Contact;\r\n"],"sourceRoot":""}
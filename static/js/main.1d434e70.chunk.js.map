{"version":3,"sources":["navigation/HamburgerMenu.tsx","navigation/Navigation.tsx","hooks/useWindowSize.ts","loading/Loading.tsx","pages/Pages.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["HamburgerMenu","setOpen","type","className","onClick","prevState","span","variants","closed","rotate","open","transition","duration","y","Navigation","useState","window","screen","width","useEffect","handleResize","addEventListener","removeEventListener","windowSize","isClient","getSize","innerWidth","setWindowSize","useWindowSize","nav","animate","ul","x","ease","li","opacity","delay","desktop","to","xmlns","height","viewBox","id","data-name","d","transform","fill","activeClassName","exact","Loading","Contact","React","lazy","Projects","Pages","fallback","path","component","App","basename","process","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1d434e70.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\r\nimport './HamburgerMenu.scss';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface HamburgerMenuProps {\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst HamburgerMenu: React.SFC<HamburgerMenuProps> = ({ setOpen }) => (\r\n  <button type=\"button\" className=\"HamburgerMenu\" onClick={() => setOpen((prevState: boolean) => !prevState)}>\r\n    <motion.span\r\n      className=\"HamburgerMenu__span\"\r\n      variants={{\r\n        closed: { rotate: 0 },\r\n        open: { rotate: 135, transition: { duration: 0.4 } },\r\n      }}\r\n    >\r\n      <motion.span\r\n        className=\"HamburgerMenu__childSpan\"\r\n        variants={{\r\n          open: { y: 0 },\r\n          closed: { y: -7 },\r\n        }}\r\n      />\r\n      <motion.span className=\"HamburgerMenu__childSpan\" />\r\n      <motion.span\r\n        className=\"HamburgerMenu__childSpan\"\r\n        variants={{\r\n          open: { y: 0, rotate: 90 },\r\n          closed: { y: 7, rotate: 0 },\r\n        }}\r\n      />\r\n    </motion.span>\r\n  </button>\r\n);\r\n\r\nexport default HamburgerMenu;\r\n","import React, { useState, useEffect } from 'react';\nimport './Navigation.scss';\nimport { NavLink, Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport HamburgerMenu from './HamburgerMenu';\nimport useWindowSize from '../hooks/useWindowSize';\n\nexport interface NavigationProps {}\n\nconst Navigation: React.SFC<NavigationProps> = () => {\n  const [open, setOpen] = useState(window.screen.width > 1000);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.screen.width > 1000) {\n        setOpen(true);\n      } else {\n        setOpen(false);\n      }\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const windowSize = useWindowSize();\n\n  const animate = () => {\n    if (windowSize > 1000) {\n      return 'desktop';\n    }\n    return open ? 'open' : 'closed';\n  };\n\n  return (\n    <motion.nav className=\"Navigation\" animate={animate()}>\n      <motion.ul\n        className=\"Navigation__list\"\n        variants={{\n          closed: { x: '-110%', transition: { ease: 'linear' } },\n          open: { x: 0, transition: { ease: 'linear' } },\n        }}\n      >\n        <motion.li\n          className=\"Navigation__item Navigation__logo\"\n          variants={{\n            closed: { x: '-200%', opacity: 0 },\n            open: { x: 0, opacity: 1, transition: { delay: 0.1 } },\n            desktop: { x: [-100, 0], opacity: [0, 1], transition: { delay: 0.4 } },\n          }}\n        >\n          <Link className=\"Navigation__link \" to=\"/\" onClick={() => setOpen(false)}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"240.088\"\n              height=\"29.253\"\n              viewBox=\"0 0 240.088 29.253\"\n            >\n              <path\n                id=\"Path_1\"\n                data-name=\"Path 1\"\n                d=\"M4.146-8.423V0H2.7V-21.006H7.764a7.293,7.293,0,0,1,4.951,1.5,5.521,5.521,0,0,1,1.714,4.387,6.463,6.463,0,0,1-1.912,4.812A7.3,7.3,0,0,1,7.163-8.423Zm0-11.25v9.917H7.134a6.188,6.188,0,0,0,4.321-1.355,4.933,4.933,0,0,0,1.479-3.831q0-4.731-5.435-4.731ZM41.221,0V-3h-.059A5.878,5.878,0,0,1,39.075-.549a5.351,5.351,0,0,1-3.04.916,4.668,4.668,0,0,1-3.384-1.2,4.035,4.035,0,0,1-1.245-3.032q0-3.926,5.2-4.746L41.221-9.3q0-4.834-3.633-4.834a7.4,7.4,0,0,0-4.819,1.992V-13.77A7.347,7.347,0,0,1,35.032-14.9a8.637,8.637,0,0,1,2.688-.469A4.525,4.525,0,0,1,41.3-13.931a6.124,6.124,0,0,1,1.267,4.175V0ZM37.09-7.471a7.155,7.155,0,0,0-3.311,1.091,2.944,2.944,0,0,0-.952,2.454,2.938,2.938,0,0,0,.886,2.2,3.386,3.386,0,0,0,2.468.864,4.632,4.632,0,0,0,3.6-1.6,5.971,5.971,0,0,0,1.436-4.138V-8.071ZM74.795,0h-1.26L70.269-11.309a9.229,9.229,0,0,1-.234-1.26h-.073a7.64,7.64,0,0,1-.293,1.23L66.006,0h-1.26L60.22-15h1.494L65.2-3.032a7.336,7.336,0,0,1,.205,1.26h.117a6.419,6.419,0,0,1,.278-1.26L69.609-15h.923l3.4,11.968a8.392,8.392,0,0,1,.205,1.26h.117a4.872,4.872,0,0,1,.249-1.26L78.062-15h1.392Zm22.91-7.441a7.419,7.419,0,0,0,1.428,4.834,4.792,4.792,0,0,0,3.918,1.743,7.973,7.973,0,0,0,4.922-1.86v1.436a8.767,8.767,0,0,1-5.2,1.655,5.882,5.882,0,0,1-4.687-2.08A8.744,8.744,0,0,1,96.3-7.588a8.366,8.366,0,0,1,1.868-5.53,6.015,6.015,0,0,1,4.856-2.249,5.07,5.07,0,0,1,4.292,1.963,8.654,8.654,0,0,1,1.494,5.361v.6Zm9.7-1.23a6.636,6.636,0,0,0-1.245-4.028,3.877,3.877,0,0,0-3.193-1.436,4.685,4.685,0,0,0-3.494,1.414,6.785,6.785,0,0,0-1.707,4.05Zm22.075-1.582V0H128.13V-9.243l-2.637,2.007V-8.643l2.637-2.007V-22.207h1.348v10.532l2.666-1.978v1.406Zm45.366,1.831V0h-1.45V-21.006h5.068a7.293,7.293,0,0,1,4.951,1.5,5.521,5.521,0,0,1,1.714,4.387,6.463,6.463,0,0,1-1.912,4.812,7.3,7.3,0,0,1-5.354,1.882Zm0-11.25v9.917h2.988a6.188,6.188,0,0,0,4.321-1.355,4.933,4.933,0,0,0,1.479-3.831q0-4.731-5.435-4.731ZM208.081,3.062a8.915,8.915,0,0,1-1.816,3,3.5,3.5,0,0,1-2.563.981,3.136,3.136,0,0,1-1.172-.205V5.493a3.384,3.384,0,0,0,1.23.205q1.8,0,2.842-2.49l1.392-3.325L202.31-15h1.509l4.526,12.217q.146.4.205.6a4.544,4.544,0,0,0,.132.5h.059l.352-1.011L213.926-15h1.465ZM242.725-.659A7.466,7.466,0,0,1,238.74.366a6.3,6.3,0,0,1-4.937-2.1,7.953,7.953,0,0,1-1.875-5.5,8.273,8.273,0,0,1,2.109-5.852,7.055,7.055,0,0,1,5.42-2.278,8.233,8.233,0,0,1,3.325.7v1.523a6.585,6.585,0,0,0-3.53-1,5.387,5.387,0,0,0-4.277,1.9,7.244,7.244,0,0,0-1.641,4.915,7.007,7.007,0,0,0,1.5,4.688A4.938,4.938,0,0,0,238.8-.864a6.545,6.545,0,0,0,3.926-1.2Z\"\n                transform=\"translate(-2.695 22.207)\"\n                fill=\"#fff\"\n              />\n            </svg>\n          </Link>\n        </motion.li>\n        {/* <motion.li\n          className=\"Navigation__item\"\n          variants={{\n            closed: { x: '-200%', opacity: 0 },\n            open: { x: 0, opacity: 1, transition: { delay: 0.2 } },\n            desktop: { x: [-100, 0], opacity: [0, 1], transition: { delay: 0.3 } },\n          }}\n        >\n          <NavLink\n            className=\"Navigation__link\"\n            activeClassName=\"Navigation__activeLink\"\n            to=\"/\"\n            exact\n            onClick={() => setOpen(false)}\n          >\n            O mnie\n          </NavLink>\n        </motion.li> */}\n        <motion.li\n          className=\"Navigation__item\"\n          variants={{\n            closed: { x: '-200%', opacity: 0 },\n            open: { x: 0, opacity: 1, transition: { delay: 0.3 } },\n            desktop: { x: [-100, 0], opacity: [0, 1], transition: { delay: 0.2 } },\n          }}\n        >\n          <NavLink\n            className=\"Navigation__link\"\n            activeClassName=\"Navigation__activeLink\"\n            to=\"/\"\n            exact\n            onClick={() => setOpen(false)}\n          >\n            Projekty\n          </NavLink>\n        </motion.li>\n        <motion.li\n          className=\"Navigation__item\"\n          variants={{\n            closed: { x: '-200%', opacity: 0 },\n            open: { x: 0, opacity: 1, transition: { delay: 0.5 } },\n            desktop: { x: [-100, 0], opacity: [0, 1], transition: { delay: 0 } },\n          }}\n        >\n          <NavLink\n            className=\"Navigation__link\"\n            to=\"/contact\"\n            activeClassName=\"Navigation__activeLink\"\n            onClick={() => setOpen(false)}\n          >\n            Kontakt\n          </NavLink>\n        </motion.li>\n      </motion.ul>\n      <HamburgerMenu setOpen={setOpen} />\n    </motion.nav>\n  );\n};\nexport default Navigation;\n","import { useState, useEffect } from 'react';\n\nexport default function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  function getSize() {\n    return isClient ? window.innerWidth : 0;\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n","import React from 'react';\r\nimport './Loading.css';\r\n\r\nexport interface LoadingProps {}\r\n\r\nconst Loading: React.SFC<LoadingProps> = () => (\r\n  <div className=\"sk-cube-grid\">\r\n    <div className=\"sk-cube sk-cube2\" />\r\n    <div className=\"sk-cube sk-cube1\" />\r\n    <div className=\"sk-cube sk-cube3\" />\r\n    <div className=\"sk-cube sk-cube4\" />\r\n    <div className=\"sk-cube sk-cube5\" />\r\n    <div className=\"sk-cube sk-cube6\" />\r\n    <div className=\"sk-cube sk-cube7\" />\r\n    <div className=\"sk-cube sk-cube8\" />\r\n    <div className=\"sk-cube sk-cube9\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React, { Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n// import Home from './home/Home';\n\nimport Loading from '../loading/Loading';\n\nconst Contact = React.lazy(() => import('./contact/Contact'));\nconst Projects = React.lazy(() => import('./projects/Projects'));\n// const ProjectView = React.lazy(() => import('./projects/ProjectView'));\nexport interface PagesProps {}\n\nconst Pages: React.SFC<PagesProps> = () => (\n  <Suspense fallback={<Loading />}>\n    <Switch>\n      {/* <Route path=\"/\" exact component={Home} /> */}\n      <Route path=\"/contact\" exact component={Contact} />\n      <Route path=\"/\" exact component={Projects} />\n      {/* <Route path=\"/projects/:projectParam\" exact component={ProjectView} /> */}\n    </Switch>\n  </Suspense>\n);\n\nexport default Pages;\n","import React, { Suspense } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport Navigation from './navigation/Navigation';\r\nimport Pages from './pages/Pages';\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={<>loading...</>}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Navigation />\r\n\r\n        <Pages />\r\n      </Router>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
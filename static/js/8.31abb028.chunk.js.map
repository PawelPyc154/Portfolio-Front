{"version":3,"sources":["pages/contact/ContactForm.tsx","pages/contact/Contact.tsx"],"names":["ContactForm","validationSchema","yup","email","required","message","min","validateOnChange","initialValues","onSubmit","setSubmitting","console","log","values","errors","touched","handleChange","handleBlur","isSubmitting","isValid","className","input","style","border","type","name","onChange","onBlur","value","placeholder","animate","x","opacity","transition","delay","textarea","button","disabled","Contact","h2","y","p","text","href"],"mappings":"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","file":"static/js/8.31abb028.chunk.js","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport './ContactForm.scss';\nimport { motion } from 'framer-motion';\n\nexport interface ContactFormProps {}\n\nconst ContactForm: React.SFC<ContactFormProps> = () => {\n  const validationSchema = yup.object({\n    email: yup\n      .string()\n      .email('Invalid email')\n      .required('Required'),\n\n    message: yup\n      .string()\n      .required('Required')\n      .min(6, 'Too Short!'),\n  });\n\n  return (\n    <Formik\n      validateOnChange\n      validationSchema={validationSchema}\n      initialValues={{\n        email: '',\n        message: '',\n      }}\n      onSubmit={({ email, message }, { setSubmitting }) => {\n        setSubmitting(true);\n        console.log(email);\n        console.log(message);\n\n        setSubmitting(false);\n      }}\n    >\n      {({ values, errors, touched, handleChange, handleBlur, isSubmitting, isValid }) => (\n        <Form className=\"Form\">\n          {errors.email && touched.email && <div className=\"Form__validation\">{errors.email}</div>}\n          <motion.input\n            style={errors.email && touched.email ? { border: '1px solid #e74c3c' } : {}}\n            className=\"Form__input\"\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n            placeholder=\"Email\"\n            animate={{ x: [100, 0], opacity: [0, 1] }}\n            transition={{ delay: 0.4 }}\n          />\n          {errors.message && touched.message && <div className=\"Form__validation\">{errors.message}</div>}\n          <motion.textarea\n            style={errors.message && touched.message ? { border: '1px solid #e74c3c' } : {}}\n            className=\"Form__input Form__textarea\"\n            name=\"message\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.message}\n            placeholder=\"Wiadomość\"\n            animate={{ x: [100, 0], opacity: [0, 1] }}\n            transition={{ delay: 0.2 }}\n          />\n          <motion.button\n            style={isValid && values.email && values.message ? { border: '1px solid #2ecc71' } : {}}\n            disabled={isValid && isSubmitting}\n            type=\"submit\"\n            className=\"Form__btn\"\n            animate={{ x: [100, 0], opacity: [0, 1] }}\n            transition={{ delay: 0 }}\n          >\n            Wyślij\n          </motion.button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport './Contact.scss';\n// import { MdPhone, MdEmail } from 'react-icons/md';\nimport { FaCopy } from 'react-icons/fa';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { motion } from 'framer-motion';\nimport Form from './ContactForm';\n\nexport interface ContactProps {}\n\nconst Contact: React.SFC<ContactProps> = () => (\n  <main className=\"Contact\">\n    <section className=\"Contact__info\">\n      <motion.h2 className=\"Contact__header\" animate={{ y: [-100, 0], opacity: [0, 1] }} transition={{ delay: 0.6 }}>\n        Skontaktuj się\n      </motion.h2>\n      <motion.p className=\"Contact__paragraph\" animate={{ y: [-100, 0], opacity: [0, 1] }} transition={{ delay: 0.4 }}>\n        Paweł Pyc\n      </motion.p>\n      <motion.p className=\"Contact__paragraph\" animate={{ y: [-100, 0], opacity: [0, 1] }} transition={{ delay: 0.2 }}>\n        {/* <MdPhone className=\"Contact__icon\" /> */}\n        691 115 437\n        <CopyToClipboard text=\"691115437\">\n          <FaCopy className=\"Contact__icon Contact__icon--copy\" />\n        </CopyToClipboard>\n      </motion.p>\n      <motion.p className=\"Contact__paragraph\" animate={{ y: [-100, 0], opacity: [0, 1] }} transition={{ delay: 0 }}>\n        <a className=\"Contact__link\" href=\"mailto: pawelpyc154@gmail.com?subject=your title&body=TThe message\">\n          pawelpyc154@gmail.com\n        </a>\n        <CopyToClipboard text=\"pawelpyc154@gmail.com\">\n          <FaCopy className=\"Contact__icon Contact__icon--copy\" />\n        </CopyToClipboard>\n      </motion.p>\n    </section>\n    <section className=\"Contact__formContainer\">\n      <Form />\n    </section>\n  </main>\n);\n\nexport default Contact;\n"],"sourceRoot":""}